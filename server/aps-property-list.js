"use strict";var _isIterable2=require("babel-runtime/core-js/is-iterable"),_isIterable3=_interopRequireDefault(_isIterable2),_getIterator2=require("babel-runtime/core-js/get-iterator"),_getIterator3=_interopRequireDefault(_getIterator2),_stringify=require("babel-runtime/core-js/json/stringify"),_stringify2=_interopRequireDefault(_stringify),_promise=require("babel-runtime/core-js/promise"),_promise2=_interopRequireDefault(_promise),_slicedToArray=function(){return function(e,r){if(Array.isArray(e))return e;if((0,_isIterable3.default)(Object(e)))return function(e,r){var t=[],n=!0,i=!1,o=void 0;try{for(var a,s=(0,_getIterator3.default)(e);!(n=(a=s.next()).done)&&(t.push(a.value),!r||t.length!==r);n=!0);}catch(e){i=!0,o=e}finally{try{!n&&s.return&&s.return()}finally{if(i)throw o}}return t}(e,r);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var getPropertyList=function(e){return new _promise2.default(function(r,t){e.collection("propertybank").find(function(e,n){e&&t(e),n.toArray().then(function(e){r(e)})})})},analyzeSchema=function(e,r){var t=[],n=[],i=[],o=[];return function e(a,s){s.forEach(function(s){if("sections"===a&&(t.pop(),t.push(s.name)),"subsections"===a&&(n.pop(),n.push(s.name)),"groups"===a&&(i.pop(),i.push(s.name)),"properties"===a){var u=r.find(function(e){return e.name===s}),c=t.slice(-1),p=_slicedToArray(c,1)[0],l=n.slice(-1),f=_slicedToArray(l,1)[0],d=i.slice(-1),m=_slicedToArray(d,1)[0],y=[p||"",f||"",m||""];u||console.log(s),o.push({name:s,type:u&&u.type||"",path:y.join(" -> "),title:u&&u.title?u.title.en:"",description:u&&u.description?u.description.en:""})}s.hasOwnProperty("subsections")?e("subsections",s.subsections):s.hasOwnProperty("group")?e("groups",s.group):s.hasOwnProperty("properties")&&e("properties",s.properties)})}("sections",e),{properties:o}};exports.getPropertyData=function(e,r){var t=e.mongo.db;t.db("vbx_current").collection("vbxReleases").findOne({version:e.query.version},function(e,n){var i=n.dbName;t=t.db(i),getPropertyList(t).then(function(e){t.collection("componentSchema").aggregate([{$lookup:{from:"components",localField:"cId",foreignField:"_id",as:"componentDetails"}},{$unwind:"$componentDetails"}],function(t,n){var i=n.map(function(r){return{name:r.componentDetails.name,data:analyzeSchema(r.sections,e)}});r((0,_stringify2.default)(i))})}).catch(function(e){r(e)})})};